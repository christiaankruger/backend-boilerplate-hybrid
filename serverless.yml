service: YOUR-SERVICE-NAME-HERE

custom:
  customDomain:
    domainName: YOUR-DOMAIN-HERE
    endpointType: 'regional'
    createRoute53Record: true
    stage: ${self:custom.common.stage}
  webpack:
    includeModules: true
  common:
    YOUR_ENV_VARS: 'Here'

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

resources: ${file(./server/serverless/resources.yml)}

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs12.x
  region: us-east-1
  environment: ${self:custom.common}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: 'arn:aws:dynamodb:us-east-1:*:*'
    - Effect: 'Allow'
      Resource: '*'
      Action:
        - 'sns:*'
    - Effect: Allow
      Action:
        - kms:Decrypt
      Resource:
        - 'Fn::Join':
            - ':'
            - - 'arn:aws:kms'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - '/slack/*'

functions:
  helloWorld:
    handler: src/serverless/handler.main
    events:
      - http:
          path: v1/hello-world
          method: get
          cors: ${file(./server/serverless/cors.yml)}
